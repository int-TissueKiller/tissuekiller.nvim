return {
  "williamboman/mason.nvim",
  cmd = "Mason",
  dependencies = {
    {
      "williamboman/mason-lspconfig.nvim",
      event = "BufReadPost",
      config = function()
        require("mason").setup({
          ui = {
            icons = {
              package_installed = "✓",
              package_pending = "➜",
              package_uninstalled = "✗"
            }
          }
        })

        require("mason-lspconfig").setup({
          ensure_installed = {}, -- 如 { "lua_ls", "clangd", "pylsp" }
        })
      end,
    },
    {
      "neovim/nvim-lspconfig",
      -- 移除 event，改为 opts + config 模式
      opts = {},
      config = function(_, opts)
        -- 获取补全能力
        local capabilities = require('cmp_nvim_lsp').default_capabilities()

        -- 定义通用配置函数（可选）
        local function setup_lsp(server, custom_config)
          local default_config = {
            capabilities = capabilities,
          }
          -- ✅ 使用新 API：定义配置
          vim.lsp.config(server, vim.tbl_deep_extend("force", default_config, custom_config or {}))
          -- ✅ 使用新 API：启用服务器（自动绑定 FileType）
          vim.lsp.enable(server)
        end

        -- Lua 语言服务器
        vim.api.nvim_create_autocmd("FileType", {
          pattern = "lua",
          callback = function()
            setup_lsp("lua_ls")
          end,
        })

        -- C/C++
        -- vim.api.nvim_create_autocmd("FileType", {
        --   pattern = "c,cpp",
        --   callback = function()
        --     setup_lsp("clangd")
        --   end,
        -- })
        
        -- Python
        vim.api.nvim_create_autocmd("FileType", {
          pattern = "python",
          callback = function()
            setup_lsp("pylsp")
          end,
        })

        -- Java 示例（可选）
        -- vim.api.nvim_create_autocmd("FileType", {
        --   pattern = "java",
        --   callback = function()
        --     setup_lsp("jdtls", {
        --       cmd = { 'java', '-jar', '/path/to/eclipse.jdt.ls/org.eclipse.jdt.ls.core.jar' },
        --       settings = {
        --         java = {
        --           home = '/usr/lib/jvm/java-8-openjdk',
        --         },
        --         completion = {
        --           enabled = true,
        --           favoriteStaticMembers = true,
        --         },
        --       },
        --     })
        --   end,
        -- })
      end,
    },
    {
      "scalameta/nvim-metals",
      ft = "scala",
      lazy = true,
    },
  },
}
